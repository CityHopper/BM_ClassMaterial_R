#사분위수
quantity(weight.heavy)
#사분위수
quantile(weight.heavy)
quantile(weight.heavy, (0:10)/10)
quantile(weight.heavy, (0:10)/100)
quantile(weight.heavy, (0:10)/30)
quantile(weight.heavy, (0:10)/3)
quantile(weight.heavy, (0:10)/10)
quantile(weight.heavy, (0:10)/15)
quantile(weight.heavy, (0:10)/5)
quantile(weight.heavy, (0:10)/2)
summary(weight.heavy)
#분산
var(weight)
#산포 distribution
#분산
var(weight); var(weight.heavy)
#표준편차
sd(weight); sd(weight.heavy)
#값의 범위(최소값과 최대값)
range(weight), range(weight.heavy)
#값의 범위(최소값과 최대값)
range(weight); range(weight.heavy)
#최대값
diff(range(weight))
#최대값과 최소값의 차이
diff(range(weight)); diff(range(weight.heavy))
#histogram: 연속형 자료의 분포를 시각화
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
str(cars)
#histogram: 연속형 자료의 분포를 시각화
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
cars
#histogram: 연속형 자료의 분포를 시각화
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
str(cars)
dist <- cars [, 2]
dist
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'blue', col = 'green',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'blue', col = 'navy',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'red', col = 'navy',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'black', col = 'navy',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 3, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 4, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 2, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 10)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 20)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 10)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 5)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 1)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 100)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 20)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 20)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 20)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 1, breaks = 20)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 2, breaks = 20)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 3, breaks = 20)
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 20)
#상자그림(boxplot, 상자수염그림)
#사분위수를 시각화하여 그래프 형태로 표시
#상자그림은 하나의 그래프로 데이터의 분포형태를포함한 다양한 정보를 전달
#자료의 전반적인 분포를 이해하는데 도움
#구체적인 최소/최대/중앙값을 알기는 어렵다
boxplot(dist, main ="자동차 제동거리")
#상자그림(boxplot, 상자수염그림)
#사분위수를 시각화하여 그래프 형태로 표시
#상자그림은 하나의 그래프로 데이터의 분포형태를포함한 다양한 정보를 전달
#자료의 전반적인 분포를 이해하는데 도움
#구체적인 최소/최대/중앙값을 알기는 어렵다
boxplot(dist, main ="자동차 제동거리")
boxplot.stats(dist)
boxplot.stats(dist)$stats #정상범위 사분위수
boxplot.stats(dist)$n     #관측치 개수
boxplot.stats(dist)$conf  #중앙값 신뢰구간
boxplot.stats(dist)$out   #이상치(특이값) 목록
#일변량 중 그룹으로 구성된 자료의 상자그림
boxplot(Petal.Length~Species,
data = iris,
main = '품종별 꽃잎 길이')
boxplot(iris$Petal.Length~iris$Species,
main = '품종별 꽃잎 길이')
#일변량 중 그룹으로 구성된 자료의 상자그림
boxplot(iris$Petal.Length~Species,
data = iris,
main = '품종별 꽃잎 길이')
boxplot(iris$Petal.Length~iris$Species,
main = '품종별 꽃잎 길이')
#일변량 중 그룹으로 구성된 자료의 상자그림
boxplot(Petal.Length~Species,
data = iris,
main = '품종별 꽃잎 길이')
boxplot(iris$Petal.Length~iris$Species,
main = '품종별 꽃잎 길이')
boxplot(iris$Petal.Length~iris$Species,
main = '품종별 꽃잎 길이')
#일변량 중 그룹으로 구성된 자료의 상자그림
boxplot(Petal.Length~Species,
data = iris,
main = '품종별 꽃잎 길이')
par(mfrow = c(1,3)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
par(mfrow = c(1,3)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
par(mfrow = c(1,3)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
barplot(table(mtcars$gear), main = "xxx",
xlab = "gear", ylab = 'freq',
col = 'skyblue')
par(mfrow = c(1,3)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
barplot(table(mtcars$gear), main = "xxx",
xlab = "gear", ylab = 'freq',
col = 'skyblue')
par(mfrow = c(1,1)) #가상화면 분할 해제
par(mfrow = c(1,1)) #가상화면 분할 해제
#한 화면에 여러 그래프 그리기
par(mfrow = c(1,4)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
barplot(table(mtcars$gear), main = "xxx",
xlab = "gear", ylab = 'freq',
col = 'skyblue')
par(mfrow = c(1,2)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
par(mfrow = c(1,2)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
barplot(table(mtcars$gear), main = "xxx",
xlab = "gear", ylab = 'freq',
col = 'skyblue')
par(mfrow = c(2,3)) # 1X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
barplot(table(mtcars$gear), main = "xxx",
xlab = "gear", ylab = 'freq',
col = 'skyblue')
par(mfrow = c(-1,3)) # 2X3 가상화면 분할
#한 화면에 여러 그래프 그리기
par(mfrow = c(3,3)) # 2X3 가상화면 분할
par(mfrow = c(3,3)) # 2X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
par(mfrow = c(3,3)) # 2X3 가상화면 분할
barplot(table(mtcars$carb), main = "zzz",
xlab = "carburetors", ylab = 'freq',
col = 'blue')
barplot(table(mtcars$cyl), main = "yyy",
xlab = "cyl", ylab = 'freq',
col = 'navy')
barplot(table(mtcars$gear), main = "xxx",
xlab = "gear", ylab = 'freq',
col = 'skyblue')
str(cars)
dist <- cars [, 2]; dist
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 20) #las는 축 서식 글
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 6) #las는 축 서식 글자방향/breaks는 막대의 수
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 5) #las는 축 서식 글자방향/breaks는 막대의 수
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 4) #las는 축 서식 글자방향/breaks는 막대의 수
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 3) #las는 축 서식 글자방향/breaks는 막대의 수
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 2) #las는 축 서식 글자방향/breaks는 막대의 수
source('D:/KANGYounghoon/BM_YounghoonKANG_R/KANGYounghoon_20191203.R', encoding = 'UTF-8', echo=TRUE)
#1. 위의 자료를 gender 벡터에 저장하시오.
gender = c("F", 'F', 'F', 'M', 'M', 'F', 'F', 'F', 'M', 'M'); gender
source('D:/KANGYounghoon/BM_YounghoonKANG_R/test20191202.R', encoding = 'UTF-8')
barplot(gender, main = 'Gender')
#2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
barplot(gender, main = 'Gender')
#1. 위의 자료를 gender 벡터에 저장하시오.
gender = c("F", 'F', 'F', 'M', 'M', 'F', 'F', 'F', 'M', 'M')
#2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
barplot(gender, main = 'Gender')
#2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
gd <- table(gender)
barplot(gd, main = 'Gender')
gd
#2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
gd <- table(gender); gd
pie(gd, main ="Gender")
season = c('여름', '겨울', '봄', '가을', '여름', '가을', '겨울', '여름', '여름', '가을')
season
#2. season에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
ss <- table(season); ss
#3. season에 있는 값들에 대해 막대그래프를 작성하여 출력하시오.
barplot(ss, main = "Favorite Season")
#4. season에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(ss, main = 'Favorite Season')
score = c(90,85,73,80,85,65,78,50,68,96)
names(score) = c('KOR', 'ENG', 'ATH', 'HIST', 'SOC', 'MUSIC', 'BIO', 'EARTH', 'PHY', 'ART')
score
mean(score)
mean(score); median(score)
#4. 전체 성적의 표준편차를 출력하시오.
sd(score)
#5. 가장 성적이 높은 과목의 이름을 출력하시오.
max(score)
#5. 가장 성적이 높은 과목의 이름을 출력하시오.
colnames(max(score))
#6. 성적에 대한 상자그림을 작성하고, 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score, main = "Score by Subject")
boxplot.stats(score)$out
boxplot.stats(score)$out
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
result <- score[,2]; result
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
result <- score[1,]; result
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
hist(score, main = '학생 성적'
col = 'purple')
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
score[0, ]
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
score
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
score [1, ]
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
score [, 1]
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
score [, 3]
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
score
mtcars[,"wt"]
mean(mtcars[,"wt"])
median(mtcars[,"wt"])
mean(mtcars[,"wt"], trim = 0.15)
#2. 중량(wt)에 대해 summary( ) 함수의 적용 결과를 출력하시오.
summary((mtcars[,"wt"]))
which.max(score)
score
#3. 실린더수(cyl)에 대해 도수분포표를 출력하시오.
table(mtcars[,"cyl"])
#4. 앞에서 구한 도수분포표를 막대그래프로 출력하시오.
barplot(table(mtcars[,"cyl"]))
#5. 중량(wt)의 히스토그램을 출력하시오.
mtcars[,"wt"]
hist(mtcars[,"wt"])
#6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars[,"wt"])
#6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars[,"wt"])
#6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars[,"wt"])
boxplot.stats(mtcars[,"wt"])
#5. 중량(wt)의 히스토그램을 출력하시오.
mtcars[,"wt"]
hist(mtcars[,"wt"])
#6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars[,"wt"])
boxplot.stats(mtcars[,"wt"])
boxplot.stats(mtcars[,"wt"])
#7. 배기량(disp)에 대한 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
boxplot(mtcars[,"disp"])
boxplot.stats(mtcars[,"wt"])
#8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자료에 대해 상자그림을 작성작성하고,
#각 그룹의 상자그림을 비교하여 관찰할 수 있는 것이 무엇인지 나타내시오.
boxplot(gear~mpg,
data = mtcars)
#8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자료에 대해 상자그림을 작성작성하고,
#각 그룹의 상자그림을 비교하여 관찰할 수 있는 것이 무엇인지 나타내시오.
boxplot(mpg~gear,
data = mtcars)
boxplot.stats(mpg~gear,
data = mtcars)
boxplot.stat(mpg~gear,
data = mtcars)
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score[1,])
hist(score, main = '학생 성적'
col = 'purple')
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score[0,])
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
hist(score, main = '학생 성적',
col = 'purple')
#5. 가장 성적이 높은 과목의 이름을 출력하시오.
names(score)[which.max(score)]
#8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자료에 대해 상자그림을 작성하고,
#각 그룹의 상자그림을 비교하여 관찰할 수 있는 것이 무엇인지 나타내시오.
boxplot(mpg~gear,
data = mtcars)
#8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자료에 대해 상자그림을 작성하고,
#각 그룹의 상자그림을 비교하여 관찰할 수 있는 것이 무엇인지 나타내시오.
boxplot(mpg~gear,
data = mtcars)
boxplot.stats(mpg~gear,
data = mtcars)
#6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars[,"wt"])
#8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자료에 대해 상자그림을 작성하고,
#각 그룹의 상자그림을 비교하여 관찰할 수 있는 것이 무엇인지 나타내시오.
boxplot(mpg~gear,
data = mtcars)
#1. 위의 자료를 gender 벡터에 저장하시오.
gender = c('F', 'F', 'F', 'M', 'M', 'F', 'F', 'F', 'M', 'M')
GENDER
gender
#2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
gd <- table(gender); gd
#3. gender에 있는 값들에 대해 막대그래프를 작성하여 출력하시오.
barplot(gd, main = 'Gender')
#4. gender에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(gd, main ="Gender")
#1. 위의 자료를 season 벡터에 저장하시오.
season = c('여름', '겨울', '봄', '가을', '여름', '가을', '겨울', '여름', '여름', '가을')
#2. season에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
ss <- table(season); ss
#4. season에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(ss, main = 'Favorite Season')
#1. 위 데이터를 score 벡터에 저장하시오(과목명은 데이터 이름으로 저장).
score = c(90,85,73,80,85,65,78,50,68,96)
names(score) = c('KOR', 'ENG', 'ATH', 'HIST', 'SOC', 'MUSIC', 'BIO', 'EARTH', 'PHY', 'ART')
score
#5. 가장 성적이 높은 과목의 이름을 출력하시오.
names(score)[which.max(score)]
colnames(score)
#6. 성적에 대한 상자그림을 작성하고, 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score, main = "Score by Subject")
boxplot.stats(score)$out
#7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
#(그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
hist(score, main = '학생 성적',
col = 'purple')
#1. 중량(wt)의 평균값, 중앙값, 절사평균값(절사범위: 15%), 표준편차를 각각 구하시오.
mean(mtcars[,"wt"])
median(mtcars[,"wt"])
mean(mtcars[,"wt"], trim = 0.15)
#4. 앞에서 구한 도수분포표를 막대그래프로 출력하시오.
barplot(table(mtcars[,"cyl"]))
#5. 중량(wt)의 히스토그램을 출력하시오.
mtcars[,"wt"]
hist(mtcars[,"wt"])
#6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars[,"wt"])
boxplot.stats(mtcars[,"wt"])
#7. 배기량(disp)에 대한 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
boxplot(mtcars[,"disp"])
boxplot.stats(mtcars[,"wt"])
boxplot.stats(mtcars[,"disp"])
#8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자료에 대해 상자그림을 작성하고,
#각 그룹의 상자그림을 비교하여 관찰할 수 있는 것이 무엇인지 나타내시오.
boxplot(mpg~gear,
data = mtcars)
par(mfrow=c(1,1))
#8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자료에 대해 상자그림을 작성하고,
#각 그룹의 상자그림을 비교하여 관찰할 수 있는 것이 무엇인지 나타내시오.
boxplot(mpg~gear,
data = mtcars)
par(mfrow=c(1,1))
boxplot.stats(mtcars[,"disp"])
pie(ds.new, main = 'favorite season') #pie chart원그래프
title("YES")
pie(ds.new, main = 'favorite season') #pie chart원그래프
